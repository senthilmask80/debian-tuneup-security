Linux Important configuration Files 



/boot/vmlinuz   : The Linux Kernel file.
/dev/hda          : Device file for the first IDE HDD (Hard Disk Drive)
/dev/hdc          : Device file for the IDE Cdrom, commonly
/dev/null          : A pseudo device, that don’t exist. Sometime garbage output is redirected to /dev/null, so that it gets lost, forever.
/etc/bashrc      : Contains system defaults and aliases used by bash shell.
/etc/crontab     : A shell script to run specified commands on a predefined time Interval.
/etc/exports     : Information of the file system available on network.
/etc/fstab         : Information of Disk Drive and their mount point.
/etc/group        : Information of Security Group.
/etc/grub.conf  : grub bootloader configuration file.
/etc/init.d         : Service startup Script.
/etc/lilo.conf     : lilo bootloader configuration file.
/etc/hosts         : Information of Ip addresses and corresponding host names.
/etc/hosts.allow: List of hosts allowed to access services on the local machine.
/etc/host.deny  : List of hosts denied to access services on the local machine.
/etc/inittab        : INIT process and their interaction at various run level.
/etc/issue         : Allows to edit the pre-login message.
/etc/modules.conf : Configuration files for system modules.
/etc/motd          : motd stands for Message Of The Day, The Message users gets upon login.
/etc/mtab          : Currently mounted blocks information.
/etc/passwd      : Contains password of system users in a shadow file, a security implementation.
/etc/printcap     : Printer Information
/etc/profile        : Bash shell defaults
/etc/profile.d     : Application script, executed after login.
/etc/rc.d           : Information about run level specific script.
/etc/rc.d/init.d   : Run Level Initialisation Script.
/etc/resolv.conf: Domain Name Servers (DNS) being used by System.
/etc/securetty   : Terminal List, where root login is possible.
/etc/skel            : Script that populates new user home directory.
/etc/termcap     : An ASCII file that defines the behaviour of Terminal, console and printers.
/etc/X11            : Configuration files of X-window System.
/usr/bin             : Normal user executable commands.
/usr/bin/X11     : Binaries of X windows System.
/usr/include      : Contains include files used by ‘c‘ program.
/usr/share        : Shared directories of man files, info files, etc.
/usr/lib             : Library files which are required during program compilation.
/usr/sbin          : Commands for Super User, for System Administration.
/proc/cpuinfo  : CPU Information
/proc/filesystems : File-system Information being used currently.
/proc/interrupts : Information about the current interrupts being utilised currently.
/proc/ioports     : Contains all the Input/Output addresses used by devices on the server.
/proc/meminfo : Memory Usages Information.
/proc/modules  : Currently using kernel module.
/proc/mount      : Mounted File-system Information.
/proc/stat          : Detailed Statistics of the current System.
/proc/swaps      : Swap File Information.
/version             : Linux Version Information.
/var/log/lastlog  : log of last boot process.
/var/log/messages : log of messages produced by syslog daemon at boot.
/var/log/wtmp    : list login time and duration of each user on the system currently.


SSL certificate

The self-signed SSL certificate generated during iRedMail installation:

    on RHEL/CentOS:
        /etc/pki/tls/certs/iRedMail.crt
        Private key: /etc/pki/tls/private/iRedMail.key

    on Debian/Ubuntu:
        /etc/ssl/certs/iRedMail.crt
        Private key: /etc/ssl/private/iRedMail.key

    on FreeBSD:
        /etc/ssl/certs/iRedMail.crt
        Private key: /etc/ssl/private/iRedMail.key

    on OpenBSD:
        /etc/ssl/iRedMail.crt
        Private key: /etc/ssl/iRedMail.key

Postfix

    on Linux and OpenBSD, Postfix config files are placed under /etc/postfix/.
    on FreeBSD, Postfix config files are placed under /usr/local/etc/postfix/.

Main config files:

    main.cf: contains most configurations.
    master.cf: contains transport related settings.
    aliases: aliases for system accounts.
    helo_access.pcre: PCRE regular expressions of HELO check rules.
    ldap/*.cf: used to query mail accounts. LDAP backends only.
    mysql/*.cf: used to query mail accounts. MySQL/MariaDB backends only.
    pgsql/*.cf: used to query mail accounts. PostgreSQL backend only.

Log files

    on RHEL/CentOS, FreeBSD, OpenBSD, it's /var/log/maillog.
    on Debian, Ubuntu, it's /var/log/mail.log.

Dovecot

    on Linux and OpenBSD, Dovecot config files are placed under /etc/dovecot/.
    on FreeBSD, Dovecot config files are placed under /usr/local/etc/dovecot/.

Config files

Main config file is dovecot.conf. It contains most configurations.

Additional config files under /etc/dovecot/:

    dovecot-ldap.conf: used to query mail users and passwords. LDAP backends only.
    dovecot-mysql.conf: used to query mail users and passwords. MySQL/MariaDB backends only.
    dovecot-pgsql.conf: used to query mail users and passwords. PostgreSQL backend only.
    dovecot-used-quota.conf: used to store and query real-time per-user mailbox quota.
    dovecot-share-folder.conf: used to store settings of shared IMAP mailboxes.
    dovecot-master-users-password or dovecot-master-users: used to store Dovecot master user accounts.

Log files

    /var/log/dovecot/*.log: main log file after iRedMail-0.9.8.

Earlier releases log to /var/log/dovecot.log and /var/log/dovecot-*.log.
Nginx

    On Linux and OpenBSD:
        Nginx config files are placed under /etc/nginx/
        uWSGI config files are placed under /etc/uwsgi/
    On FreeBSD:
        Nginx config files are placed under /usr/local/etc/nginx
        Web applications are stored under /usr/local/www
        uWSGI config files are placed under /usr/local/etc/uwsgi/

Main config files are nginx.conf and default.conf.

    On Linux and FreeBSD: log files are placed under /var/log/nginx/.
    On OpenBSD: log files are placed under /var/www/logs/ (same as Apache).

PHP

Main config file:

    on RHEL/CentOS: it's /etc/php.ini
    on Debian/Ubuntu:
        If you're running Apache as web server:
            If you're running PHP-5: it's /etc/php5/apache2/php.ini (Debian 8, Ubuntu 14.04)
            If you're running PHP-7: it's /etc/php/7.0/cli/php.ini (Ubuntu 16.04)
        If you're running Nginx as web server: it's /etc/php5/fpm/php.ini.
            If you're running PHP-5: it's /etc/php5/fpm/php.ini (Debian 8, Ubuntu 14.04)
            If you're running PHP-7: it's /etc/php/7.0/fpm/php.ini (Ubuntu 16.04)
    on FreeBSD: it's /usr/local/etc/php.ini.
    on OpenBSD: it's /etc/php-5.X.ini

OpenLDAP

Main config file:

    on RHEL/CentOS: it's /etc/openldap/slapd.conf.
    on Debian/Ubuntu: it's /etc/ldap/slapd.conf.
    on FreeBSD: it's /usr/local/etc/openldap/slapd.conf.
    on OpenBSD: it's /etc/openldap/slapd.conf.

Schema files are stored under schema/ directory (same directory as slapd.conf).

OpenLDAP is configured to log to /var/log/openldap.log by default, if it's empty, please check normal syslog log file /var/log/messages or /var/log/syslog instead.
MySQL, MariaDB

Main config file:

    on RHEL/CentOS: /etc/my.cnf.
    on Debian/Ubuntu, it's /etc/mysql/my.cnf. If you're running MariaDB, it's /etc/mysql/mariadb.conf.d/mysqld.cnf.
    on FreeBSD: /var/db/mysql/my.cnf.
    on OpenBSD: /etc/my.cnf.

Roundcube webmail

    Root Directory. Roundcube webmail is installed under below directory by default:

        RHEL/CentOS: /opt/www/roundcubemail. It's a symbol link to roundcubemail-x.y.z under same directory.

        Note: with old iRedMail releases, it's /var/www/roundcubemail.

        Debian/Ubuntu: /opt/www/roundcubemail. It's a symbol link to /opt/www/roundcubemail-x.y.z.

        Note: with old iRedMail releases, it's /usr/share/apache2/roundcubemail, it's a symbol link to /usr/share/apache2/roundcubemail-x.y.z/.

        FreeBSD: /usr/local/www/roundcube.

        OpenBSD: /opt/www/roundcubemail. It's a symbol link to roundcubemail-x.y.z under same directory.

        Note: with old iRedMail releases, it's /var/www/roundcubemail.

    Config files:

        Main config file is config/config.inc.php under Roundcube webmail directory.

        If you're running old Roundcube webmail (0.9.x and earlier releases), it has two separate config files: config/db.inc.php and config/main.inc.php.

        Config files of plugins are placed under plugin directory. for example, config file of password plugin is plugins/password/config.inc.php.

    Log file. Roundcube is configured to log to Postfix log file by default.

Warning

Roundcube stores all default settings in config/defaults.inc.php, please do not modify it, instead, you should copy the settings you want to modify from config/defaults.inc.php to config/config.inc.php, then modify the one in config/config.inc.php.
Amavisd
Main config files

    on RHEL/CentOS: it's /etc/amavisd/amavisd.conf.

    on Debian/Ubuntu: it's /etc/amavis/conf.d/50-user.

    Debian/Ubuntu have some additional config files under /etc/amavis/conf.d/, but you can always override them in /etc/amavis/conf.d/50-user. When we mention amavisd.conf in other documents, it always means 50-user on Debian/Ubuntu.

    on FreeBSD: it's /usr/local/etc/amavisd.conf.
    on OpenBSD: it's /etc/amavisd.conf.

Log files

Amavisd is configured to log to Postfix log file by iRedMail.
SpamAssassin

With default iRedMail settings, SpamAssassin is called by Amavisd, not run as a daemon.

Main config file:

    On Linux/OpenBSD, it's /etc/mail/spamassassin/local.cf.
    On FreeBSD, it's /usr/local/etc/mail/spamassassin/local.cf.

SpamAssassin doesn't have a separated log file, to debug SpamAssassin, please set $sa_debug = 1; in Amavisd config file, then restart Amavisd service.
Fail2ban

Main config file:

    On Linux/OpenBSD, it's /etc/fail2ban/jail.local.
    On FreeBSD, it's /usr/local/etc/fail2ban/jail.local.

Warning

All custom settings should be placed in jail.local, and don't touch jail.conf, so that upgrading Fail2ban binary package won't lose/override your custom settings.

Filters:

    On Linux/OpenBSD, all filters are defined in files under /etc/fail2ban/filter.d/.
    On FreeBSD, all filters are defined in files under /usr/local/etc/fail2ban/filter.d/.

Ban/Unban actions:

    On Linux/OpenBSD, all actions are defined in files under /etc/fail2ban/action.d/.
    On FreeBSD, all filters are defined in files under /usr/local/etc/fail2ban/action.d/.

Log file: Fail2ban logs to default syslog log file.

    on RHEL/CentOS/OpenBSD/FreeBSD, it's /var/log/messages.
    on Debian/Ubuntu, it's /var/log/syslog.

SOGo Groupware

    Main config file is
        on Linux/OpenBSD: /etc/sogo/sogo.conf
        on FreeBSD: /usr/local/etc/sogo/sogo.conf
    Log file is /var/log/sogo/sogo.log.

mlmmjadmin

    Config file: /opt/mlmmjadmin/settings.py (same on all Linux/BSD distributions)
    Log file: /var/log/mlmmjadmin/mlmmjadmin.log
    Data directories:
        All active mailing lists: /var/vmail/mlmmj. Including archive.
        Removed and archived mailing lists: /var/vmail/mlmmj-archive

iRedAPD

    Main config file is /opt/iredapd/settings.py on all Linux/BSD distributions.

    Log file:
        With iRedAPD-1.7.0 and later releases, log file is /var/log/iredapd/iredapd.log.
        With iRedAPD-1.6.0 and older releases, log file is /var/log/iredapd.log.

iRedAdmin

Main config file:

    on RHEL/CentOS, it's /opt/www/iredadmin/settings.py.

    Note: on old iRedMail releases, it's /var/www/iredadmin/settings.py.

    on Debian/Ubuntu, it's /opt/www/iredadmin/settings.py.

    Note: on old iRedMail releases, it's /usr/share/apache2/iredadmin/settings.py.

    on FreeBSD, it's /opt/www/iredadmin/settings.py.

    Note: on old iRedMail releases, it's /usr/local/www/iredadmin/settings.py.

    on OpenBSD, it's /opt/www/iredadmin/settings.py.

    Note: on old iRedMail releases, it's /var/www/iredadmin/settings.py.

iRedAdmin is a web application, when debug mode is turned on, it will log error message to:

    If you're running Apache, it logs to Apache ssl error log file.
    If you're running Nginx with uwsgi:
        on Debian/Ubuntu, it logs to /var/log/uwsgi/app/iredadmin.log.
        on RHEL/CentOS, it logs to /var/log/messages.
        on OpenBSD, it logs to /var/www/logs/uwsgi.log.
        on FreeBSD, it logs to /var/log/uwsgi-iredadmin.log.

Note: If you modified any iRedAdmin files (not just config file), please restart Apache or uwsgi service (if you're running Nginx) to reload modified files.
Apache

Warning

Apache was dropped since iRedMail-0.9.8.

    On RHEL/CentOS: Apache config files are placed under /etc/httpd/.
        Main config file is /etc/httpd/conf/httpd.conf.
        Module config files are placed under /etc/httpd/conf.d/ (old releases) or /etc/httpd/conf.modules.d/.
        Root directory used to store web applications is /var/www, document root is /var/www/html/.
        Log files are placed under /var/www/httpd/.

    On Debian/Ubuntu: Apache config files are placed under /etc/apache2.
        Main config file is /etc/apache2/apache2.conf.
        Module config files are placed under /etc/apache2/conf.d/ (old releases) or /etc/apache2/conf-available/.
        Root directory used to store web applications is /usr/share/apache2, document root is /var/www/ (old releases) or /var/www/html/.
        Log files are placed under /var/log/apache2/.

    On FreeBSD: Apache config files are placed under /usr/local/etc/apache2.
        Main config file is /usr/local/etc/apache2/httpd.conf.
        Module config files are placed under /usr/local/etc/apache2/Includes/.
        Root directory used to store web applications is /usr/local/www/, document root is /usr/local/www/apacheXX/data/.
        Log files are placed under /var/log/, main log files are /var/log/httpd-access.log and /var/log/httpd-error.log.

    On OpenBSD: Apache (the one shipped in OpenBSD base system) config files are placed under /var/www/conf.
        Main config file is /var/www/conf/httpd.conf.
        Module config files are placed under /var/www/conf/modules/.
        Root directory used to store web applications is /var/www/, document root is /var/www/htdocs/.
        Log files are placed under /var/www/logs/.

Cluebringer

Warning

Policyd/Cluebringer were removed since iRedMail-0.9.3.

Main config file:

    RHEL/CentOS: /etc/policyd/cluebringer.conf, /etc/policyd/webui.conf (web admin panel).
    Debian/Ubuntu: /etc/cluebringer/cluebringer.conf, /etc/cluebringer/cluebringer-webui.conf (web admin panel).
    FreeBSD: /usr/local/etc/cluebringer.conf, /usr/local/etc/apache24/cluebringer.conf (web admin panel).
    OpenBSD: Not applicable, cluebringer is not available on OpenBSD.

Init script:

    RHEL/CentOS: /etc/init.d/cbpolicyd
    Debian/Ubuntu: /etc/init.d/postfix-cluebringer
    FreeBSD: /usr/local/etc/rc.d/policyd2
    OpenBSD: N/A. we don't have Cluebringer installed on OpenBSD.


Access files
/etc/host.conf 	Tells the network domain server how to look up hostnames. (Normally /etc/hosts, then name server; it can be changed through netconf.)
/etc/hosts 	Contains a list of known hosts (in the local network). Can be used if the IP of the system is not dynamically generated. For simple hostname resolution (to dotted notation), /etc/hosts.conf normally tells the resolver to look here before asking the network nameserver, DNS or NIS.
/etc/hosts.allow 	Man page same as hosts_access. Read by tcpd at least.
/etc/hosts.deny 	Man page same as hosts_access. Read by tcpd at least.

Booting and login/logout
/etc/issue & /etc/issue.net 	These files are read by mingetty (and similar programs) to display a "welcome" string to the user connecting from a terminal (issue) or through a telnet session (issue.net). They include a few lines stating the Red Hat release number, name, and Kernel ID. They are used by rc.local.
/etc/redhat-release 	Includes one line stating the Red Hat release number and name. Used by rc.local.
/etc/rc.d/rc 	Normally run for all run levels with level passed as argument. For example, to boot your machine in the Graphics mode (X-Server), run the following command from your command line: init 5. The runlevel 5 is starts the system in graphics mode.
/etc/rc.d/rc.local 	Not official. May be called from rc, rc.sysinit, or /etc/inittab.
/etc/rc.d/rc.sysinit 	Normally the first script run for all run levels.
/etc/rc.d/rc/rc X.d 	Scripts run from rc (X stands for any number from 1 to 5). These directories are "run-level" specific directories. When a system starts up, it identifies the run-level to be initiated, and then it calls all the startup scripts present in the specific directory for that run-level. For example, the system usually starts up and the message "entering run-level 3" is shown after the boot messages; this means that all the init scripts in the directory /etc/rc.d/rc3.d/ will be called.

File system

The kernel provides an interface to display some of its data structures that can be useful for determining the system parameters like interrupts used, devices initialised, memory statistics, etc. This interface is provided as a separate but dummy filesystem known as the /proc filesystem. Many system utilities use the values present in this filesystemf or displaying the system statistics. For example, the file /proc/modules lists the currently loaded modules in the system. This information is read by the command lsmod, which then displays it in a human readable format. In the same way, the file mtab specified in the following table reads the /proc/mount file, which contains the currently mounted filesystems.
/etc/mtab 	This changes continuously as the file /proc/mount changes. In other words, when filesystems are mounted and unmounted, the change is immediately reflected in this file.
/etc/fstab 	Lists the filesystems currently "mountable" by the computer. This is important because when the computer boots, it runs the command mount -a, which takes care of mounting every file system marked with a "1" in the next-to-last column of fstab.
/etc/mtools.conf 	Configuration for all the operations (mkdir, copy, format, etc.) on a DOS-type filesystem.

System administration
/etc/group 	Contains the valid group names and the users included in the specified groups. A single user can be present in more than one group if he performs multiple tasks. For example, is a "user" is the administrator as well as a member of the project group "project 1", then his entry in the group file will look like: user: * : group-id : project1
/etc/nologin 	If the file /etc/nologin exists, login(1) will allow access only to root. Other users will be shown the contents of this file and their logins refused.
etc/passwd 	See "man passwd". Holds some user account info including passwords (when not "shadowed").
/etc/rpmrc 	rpm command configuration. All the rpm command line options can be set together in this file so that all of the options apply globally when any rpm command is run on that system.
/etc/securetty 	Contains the device names of tty lines (one per line, without leading /dev/) on which root is allowed to login.
/etc/usertty /etc/shadow 	Contains the encrypted password information for users' accounts and optionally the password aging information. Included fields are: Login name Encrypted password Days since Jan 1, 1970 that password was last changed Days before password may be changed Days after which password must be changed Days before password is to expire that user is warned Days after password expires that account is disabled Days since Jan 1, 1970 that account is disabled
/etc/shells 	Holds the list of possible "shells" available to the system.
/etc/motd 	Message Of The Day; used if an administrator wants to convey some message to all the users of a Linux server.

Networking
/etc/gated.conf 	Configuration for gated. Used only by the gated daemon.
/etc/gated.version 	Contains the version number of the gated daemon.
/etc/gateway 	Optionally used by the routed daemon.
/etc/networks 	Lists names and addresses of networks accessible from the network to which the machine is connected. Used by route command. Allows use of name for network.
/etc/protocols 	Lists the currently available protocols. See the NAG (Network Administrators Guide) and man page. C interface is getprotoent. Should never change.
/etc/resolv.conf 	Tells the kernel which name server should be queried when a program asks to "resolve" an IP Address.
/etc/rpc 	Contains instructions/rules for RPC, which can be used in NFS calls, remote file system mounting, etc.
/etc/exports 	The file system to be exported (NFS) and permissions for it.
/etc/services 	Translates network service names to port number/protocol. Read by inetd, telnet, tcpdump, and some other programs. There are C access routines.
/etc/inetd.conf 	Config file for inetd. See the inetd man page. Holds an entry for each network service for which inetd must control daemons or other servicers. Note that services will be running, but comment them out in /etc/services so they will not be available even if running. Format:
/etc/sendmail.cf 	The Mail program sendmail's configuration file. Cryptic to understand.
/etc/sysconfig/network 	Indicates NETWORKING=yes or no. Read by rc.sysinit at least.
/etc/sysconfig/network-scripts/if* 	Red Hat network configuration scripts.

System commands

System commands are meant exclusively to control the system, and make everything work properly. All the programs like login (performing the authentication phase of a user on the console) or bash (providing the interaction between a user and the computer) are system commands. The files associated with them are therefore particularly important. This category has the following files of interest to users and administrators.
/etc/lilo.conf 	Contains the system's default boot command line parameters and also the different images to boot with. You can see this list by pressing Tab at the LILO prompt.
/etc/logrotate.conf 	Maintains the log files present in the /var/log directory.
/etc/identd.conf 	Identd is a server that implements the TCP/IP proposed standard IDENT user identification protocol as specified in the RFC 1413 document. identd operates by looking up specific TCP/IP connections and returning the user name of the process owning the connection. It can optionally return other information instead of a user name. See the identd man page.
/etc/ld.so.conf 	Configuration for the Dynamic Linker.
/etc/inittab 	This is chronologically the first configuration file in UNIX. The first program launched after a UNIX machine is switched on is init, which knows what to launch, thanks to inittab. It is read by init at run level changes, and controls the startup of the main process.
/etc/termcap 	A database containing all of the possible terminal types and their capabilities.

Daemons

A daemon is a program running in non-interactive mode. Typically, daemon tasks are related to the networking area: they wait for connections, so that they can provide services through them. Many daemons are available for Linux, ranging from Web servers to ftp servers.
/etc/syslogd.conf 	The configuration file for the syslogd daemon. syslogd is the daemon that takes care of logging (writing to disk) messages coming from other programs to the system. This service, in particular, is used by daemons that would not otherwise have any means of signaling the presence of possible problems or sending messages to users.
/etc/httpd.conf 	The configuration file for Apache, the Web server. This file is typically not in /etc. It may be in /usr/local/httpd/conf/ or /etc/httpd/conf/, but to make sure, you need to check the particular Apache installation.
/etc/conf.modules or /etc/modules.conf 	The configuration file for kerneld. Ironically, it is not the kernel "as a daemon". It is rather a daemon that takes care of loading additional kernel modules "on the fly" when needed.

User programs

In Linux (and UNIX in general), there are countless "user" programs. A most common user program config file is /etc/lynx.cfg. This is the configuration file for lynx, the well-known textual browser. Through this file you can define the proxy server, the character set to use, and so on. The following code sample shows a part of the lynx.cfg file that can be modified to change the proxy settings of the Linux system. These settings apply (by default) to all the users running lynx in their respective shells, unless a user overrides the default config file by specifying --cfg = "mylynx.cfg.

Proxy settings in /etc/lynx.cfg

Changing configuration files

When changing a configuration file, make sure that the program using that configuration is restarted if it's not controlled by the system administrator or the kernel. A normal user doesn't usually have privileges to start or stop system programs and/or daemons.
The kernel

Changing configuration files in the kernel immediately affects the system. For example, changing the passwd file to add a user immediately enables that user. Also there are some kernel tunable parameters in the /proc/sys directory on any Linux system. The write-access to all these files is given only to the super-user; other users have only readonly access. The files in this directory are classified in the same manner as the Linux kernel source. Every file in this directory represents a kernel data structure that can be dynamically modified to change the system performance.

Note: Before changing any value in any of these files, make sure you know everything about the file to avoid irreparable damage to the system.

Files in the /proc/sys/kernel/ directory

File name 	Description
threads-max 	The maximum number of tasks the kernel can run.
ctrl-alt-del 	If 1, then pressing this key sequence cleanly reboots the system.
sysrq 	If 1, then Alt-SysRq is active.
osrelease 	Displays the release of the operating system.
ostype 	Displays the type of the operating system.
hostname 	The host name of the system.
domainname 	Network domain of which the system is a part.
modprobe 	Specifies whether modprobe should be automatically run at startup, and load the necessary modules.

Daemons and system programs

A daemon is a program that is always running in background, quietly carrying out its task. Common ones are in.ftpd (ftp server daemon), in.telnetd (telnet server daemon), and syslogd (system logging daemon). Some daemons, while running, keep a close watch on the configuration file and reload it automatically when it changes. But most of the daemons do not reload automatically. We need to "tell" them somehow that the configuration file has changed and that it should be reloaded. This can be achieved (on Red Hat Linux systems) by restarting the services using the service command.

For example, if we have changed the network configuration, we need to issue:

service network restart.

Note: The services are most commonly the scripts present in the /etc/rc.d/init.d/* directory and are started by the init when the system is booted. So, to restart the service you can also do the following:

/etc/rc.d/init.d/<script-for-the-service> start | stop | status

start, stop, and status are the values that these scripts take as input to perform the action.
User programs

A user or system program reads its configuration file every time it is launched. Remember, though, that some system programs are spawned when the computer is turned on, and their behaviour depends on what they read in the configuration files in /etc/. So, the first time a user program is started, the default configuration is read from the files present in the /etc/ directory. Later, the user can customise the programs by using rc and . (dot) files as explained in the next section.

User configuration files: . (dot) files and rc files

We have seen how programs can be easily configured. But what if someone does not like the way a program has been configured in /etc/? A "normal" user cannot simply go into /etc and change the configuration files; they are owned -- from the filesystem's point of view -- by root! This is why most user programs define two configuration files: the first one at a "system" level, located in /etc/; and the other one, "private" to the user, that can be found in his or her home directory.

For example, in my system I have installed the very useful wget utility. In /etc/ there is an /etc/wgetrc file. In my home directory, there is a file named .wgetrc, which describes my customised configuration (which will be loaded only when I, the user run the wget command). Other users may also have the .wgetrc file in their home directory (/home/other); this file will be read, of course, only when the user runs the wget command. In other words, the /etc/wgetrc file provides "default" values for wget, while the /home/xxx/.wgetrc file lists the "customisations" for a certain user. It is important to understand that this is the "general rule," and is not necessarily true for all cases. A program like pine, for instance, does not have any files in /etc/, but only the custom configuration in the users' home directory, in a file named .pinerc. Other programs may only have a default configuration file in /etc/, and may not let users "customize" them (it's the case with only a few of the config. files in the /etc dir.).

Commonly used rc and . (dot) files
Filename 	Description
~/.bash_login 	Look at "man bash". Treated by bash like ~/.bash_profile if that doesn't exist.
~/.bash_logout 	Look at "man bash".Sourced by bash login shells at exit.
~/.bash_profile 	Sourced by bash login shells after /etc/profile.
~/.bash_history 	The list of commands executed previously.
~/.bashrcÂ 	Look at "man bash". Sourced by bash non-login interactive shells (no other files are). Non-interactive shells source nothing unless BASH_ENV or ENV are set.
~/.emacs 	Read by emacs at startup.
~/.forward 	If this contains an e-mail address, then all mail to owner of ~ will be forwarded to that e-mail address.
~/.fvwmrc ~/.fvwm2rc 	Config files for fvwm and fvwm2 (the basic X Window manager).
~/.hushlogin 	Look at "man login". Causes a "quiet" login (no mail notice, last login info, or MOD).
~/.mail.rc 	User init file for mail program.
~/.ncftp/ 	Directory for ncftp program; contains bookmarks, log, macros, preferences, trace. See man ncftp. The purpose of ncftp is to provide a powerful and flexible interface to the Internet standard File Transfer Protocol. It is intended to replace the stock ftp program that comes with the system.
~/.profile 	Look at "man bash". Treated by bash like ~/.bash_profile if that and ~/.bash_login don't exist, and used by other Bourn-heritage shells too.
~/.pinerc 	Pine configuration
~/.muttrc 	Mutt configuration
~/.exrc 	Configuration of vi can be controlled by this file. Example: set ai sm ruler Writing the above line in this file makes vi set the auto-indentation, matching brackets and displaying line number and rows-columns options.
~/.vimrc 	Default "Vim" configuration file. Same as .exrc.
~/.gtkrc 	GNOME Toolkit.
~/.kderc 	KDE configuration.
~/.netrc 	Default login names and passwords for ftp.
~/.rhosts 	Used by the r-tools: rsh, rlogin, etc. Very weak security since host impersonation is easy. 1. Must be owned by user (owner of ~/) or superuser. 2. Lists hosts from which users may access this account. 3. Ignored if it is a symbolic link.
~/.rpmrc 	See "man rpm". Read by rpm if /etc/rpmrc is not present.
~/.signature 	Message text that will be appended automatically to the mail sent from this account.
~/.twmrc 	Config file for twm (T he W indow M anager).
~/.xinitrc 	Read by X at startup (not by xinit script). Mostly starts some progs. Example: exec /usr/sbin/startkde If the above line is present in this file, then the KDE Window Manager is started in when the startx command is issued from this account.
~/.xmodmaprc 	This file is passed to the xmodmap program, and could be named anything (~/.Xmodmap and ~/.keymap.km, for example).
~/.xserverrc 	Run by xinit as the X server if it can find X to execute.
~/News/Sent-Message-IDs 	Default mail history file for gnus.
~/.Xauthority 	Read and written by xdm program to handle authorization. See the X, xdm, and xauth man pages.
~/.Xdefaults, ~/.Xdefaults-hostname 	Read by X applications during startup on hostname. If the -hostname file can't be found, .Xdefaults is looked for.
~/.Xmodmap 	Points to .xmodmaprc; Red Hat had (has) .xinitrc using this name.
~/.Xresources 	Usually the name for the file passed to xrdb to load the X resources database, to avoid the need for applications to read a long .Xdefaults file. (~/.Xres has been used by some.)
~/mbox 	User's old mail.

